   0  $accept : P $end

   1  P : Q

   2  Q : START Stmt END

   3  compound_stmt : OPEN_B Stmt CLOSE_B

   4  Stmt : E SEMIC Stmt
   5       | AssignExpr Stmt
   6       | compound_stmt Stmt
   7       | selection_stmt Stmt
   8       | iteration_stmt Stmt
   9       | echo_stmt Stmt
  10       |

  11  selection_stmt : IF OPEN cond CLOSE compound_stmt
  12                 | IF OPEN cond CLOSE compound_stmt ELSE compound_stmt
  13                 | IF OPEN cond CLOSE compound_stmt ElseIfStatement ELSE compound_stmt

  14  ElseIfStatement : ELSEIF OPEN cond CLOSE compound_stmt ElseIfStatement
  15                  | ELSEIF OPEN cond CLOSE compound_stmt

  16  iteration_stmt : FOR OPEN ForAssignExpr SEMIC cond SEMIC UnaryE CLOSE compound_stmt
  17                 | FOR OPEN ForAssignExpr SEMIC cond SEMIC ForAssignExpr CLOSE compound_stmt
  18                 | FOR OPEN MultipleAssignExpr SEMIC MultipleForcond SEMIC MultipleAssignExpr CLOSE compound_stmt
  19                 | FOR OPEN MultipleAssignExpr SEMIC MultipleForcond SEMIC MultipleUnaryExpr CLOSE compound_stmt

  20  MultipleAssignExpr : MultipleAssignExpr COMMA ForAssignExpr
  21                     | ForAssignExpr

  22  MultipleForcond : MultipleForcond COMMA cond
  23                  | cond

  24  MultipleUnaryExpr : MultipleUnaryExpr COMMA UnaryE
  25                    | UnaryE

  26  echo_stmt : ECHO E SEMIC
  27            | ECHO ConcatenatedText SEMIC
  28            | ECHO OPEN ConcatenatedText CLOSE SEMIC

  29  ConcatenatedText : ConcatenatedText DOT STRING
  30                   | STRING

  31  cond : expr
  32       | expr logOp expr

  33  expr : relexp
  34       | logexp

  35  relexp : E relOp E

  36  logexp : E logOp E

  37  logOp : OR
  38        | AND

  39  relOp : LT
  40        | GT
  41        | LTE
  42        | GTE
  43        | NOT_EQ_TO
  44        | EQ_TO

  45  AssignExpr : ID EQ E SEMIC

  46  ForAssignExpr : ID EQ E

  47  E : E PLUS T
  48    | E MINUS T
  49    | T

  50  T : T STAR F
  51    | T BY F
  52    | F

  53  F : OPEN E CLOSE
  54    | NUM
  55    | ID
  56    | UnaryE
  57    | Unary_op

  58  Unary_op : ID u_op ID
  59           | ID u_op NUM
  60           | ID u_op OPEN E CLOSE

  61  u_op : PLUS_EQ
  62       | MINUS_EQ
  63       | STAR_EQ
  64       | BY_EQ

  65  UnaryE : PLUS_PLUS ID
  66         | ID PLUS_PLUS
  67         | MINUS_MINUS ID
  68         | ID MINUS_MINUS

state 0
	$accept : . P $end  (0)

	START  shift 1
	.  error

	P  goto 2
	Q  goto 3


state 1
	Q : START . Stmt END  (2)
	Stmt : .  (10)

	ID  shift 4
	NUM  shift 5
	OPEN  shift 6
	PLUS_PLUS  shift 7
	MINUS_MINUS  shift 8
	OPEN_B  shift 9
	IF  shift 10
	FOR  shift 11
	ECHO  shift 12
	END  reduce 10

	Stmt  goto 13
	compound_stmt  goto 14
	E  goto 15
	AssignExpr  goto 16
	selection_stmt  goto 17
	iteration_stmt  goto 18
	echo_stmt  goto 19
	UnaryE  goto 20
	T  goto 21
	F  goto 22
	Unary_op  goto 23


state 2
	$accept : P . $end  (0)

	$end  accept


state 3
	P : Q .  (1)

	.  reduce 1


state 4
	AssignExpr : ID . EQ E SEMIC  (45)
	F : ID .  (55)
	Unary_op : ID . u_op ID  (58)
	Unary_op : ID . u_op NUM  (59)
	Unary_op : ID . u_op OPEN E CLOSE  (60)
	UnaryE : ID . PLUS_PLUS  (66)
	UnaryE : ID . MINUS_MINUS  (68)

	EQ  shift 24
	PLUS_EQ  shift 25
	MINUS_EQ  shift 26
	STAR_EQ  shift 27
	BY_EQ  shift 28
	PLUS_PLUS  shift 29
	MINUS_MINUS  shift 30
	SEMIC  reduce 55
	PLUS  reduce 55
	MINUS  reduce 55
	STAR  reduce 55
	BY  reduce 55

	u_op  goto 31


state 5
	F : NUM .  (54)

	.  reduce 54


state 6
	F : OPEN . E CLOSE  (53)

	ID  shift 32
	NUM  shift 5
	OPEN  shift 6
	PLUS_PLUS  shift 7
	MINUS_MINUS  shift 8
	.  error

	E  goto 33
	UnaryE  goto 20
	T  goto 21
	F  goto 22
	Unary_op  goto 23


state 7
	UnaryE : PLUS_PLUS . ID  (65)

	ID  shift 34
	.  error


state 8
	UnaryE : MINUS_MINUS . ID  (67)

	ID  shift 35
	.  error


state 9
	compound_stmt : OPEN_B . Stmt CLOSE_B  (3)
	Stmt : .  (10)

	ID  shift 4
	NUM  shift 5
	OPEN  shift 6
	PLUS_PLUS  shift 7
	MINUS_MINUS  shift 8
	OPEN_B  shift 9
	IF  shift 10
	FOR  shift 11
	ECHO  shift 12
	CLOSE_B  reduce 10

	Stmt  goto 36
	compound_stmt  goto 14
	E  goto 15
	AssignExpr  goto 16
	selection_stmt  goto 17
	iteration_stmt  goto 18
	echo_stmt  goto 19
	UnaryE  goto 20
	T  goto 21
	F  goto 22
	Unary_op  goto 23


state 10
	selection_stmt : IF . OPEN cond CLOSE compound_stmt  (11)
	selection_stmt : IF . OPEN cond CLOSE compound_stmt ELSE compound_stmt  (12)
	selection_stmt : IF . OPEN cond CLOSE compound_stmt ElseIfStatement ELSE compound_stmt  (13)

	OPEN  shift 37
	.  error


state 11
	iteration_stmt : FOR . OPEN ForAssignExpr SEMIC cond SEMIC UnaryE CLOSE compound_stmt  (16)
	iteration_stmt : FOR . OPEN ForAssignExpr SEMIC cond SEMIC ForAssignExpr CLOSE compound_stmt  (17)
	iteration_stmt : FOR . OPEN MultipleAssignExpr SEMIC MultipleForcond SEMIC MultipleAssignExpr CLOSE compound_stmt  (18)
	iteration_stmt : FOR . OPEN MultipleAssignExpr SEMIC MultipleForcond SEMIC MultipleUnaryExpr CLOSE compound_stmt  (19)

	OPEN  shift 38
	.  error


state 12
	echo_stmt : ECHO . E SEMIC  (26)
	echo_stmt : ECHO . ConcatenatedText SEMIC  (27)
	echo_stmt : ECHO . OPEN ConcatenatedText CLOSE SEMIC  (28)

	ID  shift 32
	NUM  shift 5
	OPEN  shift 39
	PLUS_PLUS  shift 7
	MINUS_MINUS  shift 8
	STRING  shift 40
	.  error

	E  goto 41
	UnaryE  goto 20
	ConcatenatedText  goto 42
	T  goto 21
	F  goto 22
	Unary_op  goto 23


state 13
	Q : START Stmt . END  (2)

	END  shift 43
	.  error


state 14
	Stmt : compound_stmt . Stmt  (6)
	Stmt : .  (10)

	ID  shift 4
	NUM  shift 5
	OPEN  shift 6
	PLUS_PLUS  shift 7
	MINUS_MINUS  shift 8
	OPEN_B  shift 9
	IF  shift 10
	FOR  shift 11
	ECHO  shift 12
	END  reduce 10
	CLOSE_B  reduce 10

	Stmt  goto 44
	compound_stmt  goto 14
	E  goto 15
	AssignExpr  goto 16
	selection_stmt  goto 17
	iteration_stmt  goto 18
	echo_stmt  goto 19
	UnaryE  goto 20
	T  goto 21
	F  goto 22
	Unary_op  goto 23


state 15
	Stmt : E . SEMIC Stmt  (4)
	E : E . PLUS T  (47)
	E : E . MINUS T  (48)

	SEMIC  shift 45
	PLUS  shift 46
	MINUS  shift 47
	.  error


state 16
	Stmt : AssignExpr . Stmt  (5)
	Stmt : .  (10)

	ID  shift 4
	NUM  shift 5
	OPEN  shift 6
	PLUS_PLUS  shift 7
	MINUS_MINUS  shift 8
	OPEN_B  shift 9
	IF  shift 10
	FOR  shift 11
	ECHO  shift 12
	END  reduce 10
	CLOSE_B  reduce 10

	Stmt  goto 48
	compound_stmt  goto 14
	E  goto 15
	AssignExpr  goto 16
	selection_stmt  goto 17
	iteration_stmt  goto 18
	echo_stmt  goto 19
	UnaryE  goto 20
	T  goto 21
	F  goto 22
	Unary_op  goto 23


state 17
	Stmt : selection_stmt . Stmt  (7)
	Stmt : .  (10)

	ID  shift 4
	NUM  shift 5
	OPEN  shift 6
	PLUS_PLUS  shift 7
	MINUS_MINUS  shift 8
	OPEN_B  shift 9
	IF  shift 10
	FOR  shift 11
	ECHO  shift 12
	END  reduce 10
	CLOSE_B  reduce 10

	Stmt  goto 49
	compound_stmt  goto 14
	E  goto 15
	AssignExpr  goto 16
	selection_stmt  goto 17
	iteration_stmt  goto 18
	echo_stmt  goto 19
	UnaryE  goto 20
	T  goto 21
	F  goto 22
	Unary_op  goto 23


state 18
	Stmt : iteration_stmt . Stmt  (8)
	Stmt : .  (10)

	ID  shift 4
	NUM  shift 5
	OPEN  shift 6
	PLUS_PLUS  shift 7
	MINUS_MINUS  shift 8
	OPEN_B  shift 9
	IF  shift 10
	FOR  shift 11
	ECHO  shift 12
	END  reduce 10
	CLOSE_B  reduce 10

	Stmt  goto 50
	compound_stmt  goto 14
	E  goto 15
	AssignExpr  goto 16
	selection_stmt  goto 17
	iteration_stmt  goto 18
	echo_stmt  goto 19
	UnaryE  goto 20
	T  goto 21
	F  goto 22
	Unary_op  goto 23


state 19
	Stmt : echo_stmt . Stmt  (9)
	Stmt : .  (10)

	ID  shift 4
	NUM  shift 5
	OPEN  shift 6
	PLUS_PLUS  shift 7
	MINUS_MINUS  shift 8
	OPEN_B  shift 9
	IF  shift 10
	FOR  shift 11
	ECHO  shift 12
	END  reduce 10
	CLOSE_B  reduce 10

	Stmt  goto 51
	compound_stmt  goto 14
	E  goto 15
	AssignExpr  goto 16
	selection_stmt  goto 17
	iteration_stmt  goto 18
	echo_stmt  goto 19
	UnaryE  goto 20
	T  goto 21
	F  goto 22
	Unary_op  goto 23


state 20
	F : UnaryE .  (56)

	.  reduce 56


state 21
	E : T .  (49)
	T : T . STAR F  (50)
	T : T . BY F  (51)

	STAR  shift 52
	BY  shift 53
	SEMIC  reduce 49
	COMMA  reduce 49
	PLUS  reduce 49
	MINUS  reduce 49
	CLOSE  reduce 49
	LT  reduce 49
	GT  reduce 49
	LTE  reduce 49
	GTE  reduce 49
	EQ_TO  reduce 49
	NOT_EQ_TO  reduce 49
	OR  reduce 49
	AND  reduce 49


state 22
	T : F .  (52)

	.  reduce 52


state 23
	F : Unary_op .  (57)

	.  reduce 57


state 24
	AssignExpr : ID EQ . E SEMIC  (45)

	ID  shift 32
	NUM  shift 5
	OPEN  shift 6
	PLUS_PLUS  shift 7
	MINUS_MINUS  shift 8
	.  error

	E  goto 54
	UnaryE  goto 20
	T  goto 21
	F  goto 22
	Unary_op  goto 23


state 25
	u_op : PLUS_EQ .  (61)

	.  reduce 61


state 26
	u_op : MINUS_EQ .  (62)

	.  reduce 62


state 27
	u_op : STAR_EQ .  (63)

	.  reduce 63


state 28
	u_op : BY_EQ .  (64)

	.  reduce 64


state 29
	UnaryE : ID PLUS_PLUS .  (66)

	.  reduce 66


state 30
	UnaryE : ID MINUS_MINUS .  (68)

	.  reduce 68


state 31
	Unary_op : ID u_op . ID  (58)
	Unary_op : ID u_op . NUM  (59)
	Unary_op : ID u_op . OPEN E CLOSE  (60)

	ID  shift 55
	NUM  shift 56
	OPEN  shift 57
	.  error


state 32
	F : ID .  (55)
	Unary_op : ID . u_op ID  (58)
	Unary_op : ID . u_op NUM  (59)
	Unary_op : ID . u_op OPEN E CLOSE  (60)
	UnaryE : ID . PLUS_PLUS  (66)
	UnaryE : ID . MINUS_MINUS  (68)

	PLUS_EQ  shift 25
	MINUS_EQ  shift 26
	STAR_EQ  shift 27
	BY_EQ  shift 28
	PLUS_PLUS  shift 29
	MINUS_MINUS  shift 30
	SEMIC  reduce 55
	COMMA  reduce 55
	PLUS  reduce 55
	MINUS  reduce 55
	STAR  reduce 55
	BY  reduce 55
	CLOSE  reduce 55
	LT  reduce 55
	GT  reduce 55
	LTE  reduce 55
	GTE  reduce 55
	EQ_TO  reduce 55
	NOT_EQ_TO  reduce 55
	OR  reduce 55
	AND  reduce 55

	u_op  goto 31


state 33
	E : E . PLUS T  (47)
	E : E . MINUS T  (48)
	F : OPEN E . CLOSE  (53)

	PLUS  shift 46
	MINUS  shift 47
	CLOSE  shift 58
	.  error


state 34
	UnaryE : PLUS_PLUS ID .  (65)

	.  reduce 65


state 35
	UnaryE : MINUS_MINUS ID .  (67)

	.  reduce 67


state 36
	compound_stmt : OPEN_B Stmt . CLOSE_B  (3)

	CLOSE_B  shift 59
	.  error


state 37
	selection_stmt : IF OPEN . cond CLOSE compound_stmt  (11)
	selection_stmt : IF OPEN . cond CLOSE compound_stmt ELSE compound_stmt  (12)
	selection_stmt : IF OPEN . cond CLOSE compound_stmt ElseIfStatement ELSE compound_stmt  (13)

	ID  shift 32
	NUM  shift 5
	OPEN  shift 6
	PLUS_PLUS  shift 7
	MINUS_MINUS  shift 8
	.  error

	E  goto 60
	cond  goto 61
	UnaryE  goto 20
	expr  goto 62
	relexp  goto 63
	logexp  goto 64
	T  goto 21
	F  goto 22
	Unary_op  goto 23


state 38
	iteration_stmt : FOR OPEN . ForAssignExpr SEMIC cond SEMIC UnaryE CLOSE compound_stmt  (16)
	iteration_stmt : FOR OPEN . ForAssignExpr SEMIC cond SEMIC ForAssignExpr CLOSE compound_stmt  (17)
	iteration_stmt : FOR OPEN . MultipleAssignExpr SEMIC MultipleForcond SEMIC MultipleAssignExpr CLOSE compound_stmt  (18)
	iteration_stmt : FOR OPEN . MultipleAssignExpr SEMIC MultipleForcond SEMIC MultipleUnaryExpr CLOSE compound_stmt  (19)

	ID  shift 65
	.  error

	ForAssignExpr  goto 66
	MultipleAssignExpr  goto 67


state 39
	echo_stmt : ECHO OPEN . ConcatenatedText CLOSE SEMIC  (28)
	F : OPEN . E CLOSE  (53)

	ID  shift 32
	NUM  shift 5
	OPEN  shift 6
	PLUS_PLUS  shift 7
	MINUS_MINUS  shift 8
	STRING  shift 40
	.  error

	E  goto 33
	UnaryE  goto 20
	ConcatenatedText  goto 68
	T  goto 21
	F  goto 22
	Unary_op  goto 23


state 40
	ConcatenatedText : STRING .  (30)

	.  reduce 30


state 41
	echo_stmt : ECHO E . SEMIC  (26)
	E : E . PLUS T  (47)
	E : E . MINUS T  (48)

	SEMIC  shift 69
	PLUS  shift 46
	MINUS  shift 47
	.  error


state 42
	echo_stmt : ECHO ConcatenatedText . SEMIC  (27)
	ConcatenatedText : ConcatenatedText . DOT STRING  (29)

	SEMIC  shift 70
	DOT  shift 71
	.  error


state 43
	Q : START Stmt END .  (2)

	.  reduce 2


state 44
	Stmt : compound_stmt Stmt .  (6)

	.  reduce 6


state 45
	Stmt : E SEMIC . Stmt  (4)
	Stmt : .  (10)

	ID  shift 4
	NUM  shift 5
	OPEN  shift 6
	PLUS_PLUS  shift 7
	MINUS_MINUS  shift 8
	OPEN_B  shift 9
	IF  shift 10
	FOR  shift 11
	ECHO  shift 12
	END  reduce 10
	CLOSE_B  reduce 10

	Stmt  goto 72
	compound_stmt  goto 14
	E  goto 15
	AssignExpr  goto 16
	selection_stmt  goto 17
	iteration_stmt  goto 18
	echo_stmt  goto 19
	UnaryE  goto 20
	T  goto 21
	F  goto 22
	Unary_op  goto 23


state 46
	E : E PLUS . T  (47)

	ID  shift 32
	NUM  shift 5
	OPEN  shift 6
	PLUS_PLUS  shift 7
	MINUS_MINUS  shift 8
	.  error

	UnaryE  goto 20
	T  goto 73
	F  goto 22
	Unary_op  goto 23


state 47
	E : E MINUS . T  (48)

	ID  shift 32
	NUM  shift 5
	OPEN  shift 6
	PLUS_PLUS  shift 7
	MINUS_MINUS  shift 8
	.  error

	UnaryE  goto 20
	T  goto 74
	F  goto 22
	Unary_op  goto 23


state 48
	Stmt : AssignExpr Stmt .  (5)

	.  reduce 5


state 49
	Stmt : selection_stmt Stmt .  (7)

	.  reduce 7


state 50
	Stmt : iteration_stmt Stmt .  (8)

	.  reduce 8


state 51
	Stmt : echo_stmt Stmt .  (9)

	.  reduce 9


state 52
	T : T STAR . F  (50)

	ID  shift 32
	NUM  shift 5
	OPEN  shift 6
	PLUS_PLUS  shift 7
	MINUS_MINUS  shift 8
	.  error

	UnaryE  goto 20
	F  goto 75
	Unary_op  goto 23


state 53
	T : T BY . F  (51)

	ID  shift 32
	NUM  shift 5
	OPEN  shift 6
	PLUS_PLUS  shift 7
	MINUS_MINUS  shift 8
	.  error

	UnaryE  goto 20
	F  goto 76
	Unary_op  goto 23


state 54
	AssignExpr : ID EQ E . SEMIC  (45)
	E : E . PLUS T  (47)
	E : E . MINUS T  (48)

	SEMIC  shift 77
	PLUS  shift 46
	MINUS  shift 47
	.  error


state 55
	Unary_op : ID u_op ID .  (58)

	.  reduce 58


state 56
	Unary_op : ID u_op NUM .  (59)

	.  reduce 59


state 57
	Unary_op : ID u_op OPEN . E CLOSE  (60)

	ID  shift 32
	NUM  shift 5
	OPEN  shift 6
	PLUS_PLUS  shift 7
	MINUS_MINUS  shift 8
	.  error

	E  goto 78
	UnaryE  goto 20
	T  goto 21
	F  goto 22
	Unary_op  goto 23


state 58
	F : OPEN E CLOSE .  (53)

	.  reduce 53


state 59
	compound_stmt : OPEN_B Stmt CLOSE_B .  (3)

	.  reduce 3


state 60
	relexp : E . relOp E  (35)
	logexp : E . logOp E  (36)
	E : E . PLUS T  (47)
	E : E . MINUS T  (48)

	PLUS  shift 46
	MINUS  shift 47
	LT  shift 79
	GT  shift 80
	LTE  shift 81
	GTE  shift 82
	EQ_TO  shift 83
	NOT_EQ_TO  shift 84
	OR  shift 85
	AND  shift 86
	.  error

	logOp  goto 87
	relOp  goto 88


state 61
	selection_stmt : IF OPEN cond . CLOSE compound_stmt  (11)
	selection_stmt : IF OPEN cond . CLOSE compound_stmt ELSE compound_stmt  (12)
	selection_stmt : IF OPEN cond . CLOSE compound_stmt ElseIfStatement ELSE compound_stmt  (13)

	CLOSE  shift 89
	.  error


state 62
	cond : expr .  (31)
	cond : expr . logOp expr  (32)

	OR  shift 85
	AND  shift 86
	SEMIC  reduce 31
	COMMA  reduce 31
	CLOSE  reduce 31

	logOp  goto 90


state 63
	expr : relexp .  (33)

	.  reduce 33


state 64
	expr : logexp .  (34)

	.  reduce 34


state 65
	ForAssignExpr : ID . EQ E  (46)

	EQ  shift 91
	.  error


66: shift/reduce conflict (shift 92, reduce 21) on SEMIC
state 66
	iteration_stmt : FOR OPEN ForAssignExpr . SEMIC cond SEMIC UnaryE CLOSE compound_stmt  (16)
	iteration_stmt : FOR OPEN ForAssignExpr . SEMIC cond SEMIC ForAssignExpr CLOSE compound_stmt  (17)
	MultipleAssignExpr : ForAssignExpr .  (21)

	SEMIC  shift 92
	COMMA  reduce 21


state 67
	iteration_stmt : FOR OPEN MultipleAssignExpr . SEMIC MultipleForcond SEMIC MultipleAssignExpr CLOSE compound_stmt  (18)
	iteration_stmt : FOR OPEN MultipleAssignExpr . SEMIC MultipleForcond SEMIC MultipleUnaryExpr CLOSE compound_stmt  (19)
	MultipleAssignExpr : MultipleAssignExpr . COMMA ForAssignExpr  (20)

	SEMIC  shift 93
	COMMA  shift 94
	.  error


state 68
	echo_stmt : ECHO OPEN ConcatenatedText . CLOSE SEMIC  (28)
	ConcatenatedText : ConcatenatedText . DOT STRING  (29)

	CLOSE  shift 95
	DOT  shift 71
	.  error


state 69
	echo_stmt : ECHO E SEMIC .  (26)

	.  reduce 26


state 70
	echo_stmt : ECHO ConcatenatedText SEMIC .  (27)

	.  reduce 27


state 71
	ConcatenatedText : ConcatenatedText DOT . STRING  (29)

	STRING  shift 96
	.  error


state 72
	Stmt : E SEMIC Stmt .  (4)

	.  reduce 4


state 73
	E : E PLUS T .  (47)
	T : T . STAR F  (50)
	T : T . BY F  (51)

	STAR  shift 52
	BY  shift 53
	SEMIC  reduce 47
	COMMA  reduce 47
	PLUS  reduce 47
	MINUS  reduce 47
	CLOSE  reduce 47
	LT  reduce 47
	GT  reduce 47
	LTE  reduce 47
	GTE  reduce 47
	EQ_TO  reduce 47
	NOT_EQ_TO  reduce 47
	OR  reduce 47
	AND  reduce 47


state 74
	E : E MINUS T .  (48)
	T : T . STAR F  (50)
	T : T . BY F  (51)

	STAR  shift 52
	BY  shift 53
	SEMIC  reduce 48
	COMMA  reduce 48
	PLUS  reduce 48
	MINUS  reduce 48
	CLOSE  reduce 48
	LT  reduce 48
	GT  reduce 48
	LTE  reduce 48
	GTE  reduce 48
	EQ_TO  reduce 48
	NOT_EQ_TO  reduce 48
	OR  reduce 48
	AND  reduce 48


state 75
	T : T STAR F .  (50)

	.  reduce 50


state 76
	T : T BY F .  (51)

	.  reduce 51


state 77
	AssignExpr : ID EQ E SEMIC .  (45)

	.  reduce 45


state 78
	E : E . PLUS T  (47)
	E : E . MINUS T  (48)
	Unary_op : ID u_op OPEN E . CLOSE  (60)

	PLUS  shift 46
	MINUS  shift 47
	CLOSE  shift 97
	.  error


state 79
	relOp : LT .  (39)

	.  reduce 39


state 80
	relOp : GT .  (40)

	.  reduce 40


state 81
	relOp : LTE .  (41)

	.  reduce 41


state 82
	relOp : GTE .  (42)

	.  reduce 42


state 83
	relOp : EQ_TO .  (44)

	.  reduce 44


state 84
	relOp : NOT_EQ_TO .  (43)

	.  reduce 43


state 85
	logOp : OR .  (37)

	.  reduce 37


state 86
	logOp : AND .  (38)

	.  reduce 38


state 87
	logexp : E logOp . E  (36)

	ID  shift 32
	NUM  shift 5
	OPEN  shift 6
	PLUS_PLUS  shift 7
	MINUS_MINUS  shift 8
	.  error

	E  goto 98
	UnaryE  goto 20
	T  goto 21
	F  goto 22
	Unary_op  goto 23


state 88
	relexp : E relOp . E  (35)

	ID  shift 32
	NUM  shift 5
	OPEN  shift 6
	PLUS_PLUS  shift 7
	MINUS_MINUS  shift 8
	.  error

	E  goto 99
	UnaryE  goto 20
	T  goto 21
	F  goto 22
	Unary_op  goto 23


state 89
	selection_stmt : IF OPEN cond CLOSE . compound_stmt  (11)
	selection_stmt : IF OPEN cond CLOSE . compound_stmt ELSE compound_stmt  (12)
	selection_stmt : IF OPEN cond CLOSE . compound_stmt ElseIfStatement ELSE compound_stmt  (13)

	OPEN_B  shift 9
	.  error

	compound_stmt  goto 100


state 90
	cond : expr logOp . expr  (32)

	ID  shift 32
	NUM  shift 5
	OPEN  shift 6
	PLUS_PLUS  shift 7
	MINUS_MINUS  shift 8
	.  error

	E  goto 60
	UnaryE  goto 20
	expr  goto 101
	relexp  goto 63
	logexp  goto 64
	T  goto 21
	F  goto 22
	Unary_op  goto 23


state 91
	ForAssignExpr : ID EQ . E  (46)

	ID  shift 32
	NUM  shift 5
	OPEN  shift 6
	PLUS_PLUS  shift 7
	MINUS_MINUS  shift 8
	.  error

	E  goto 102
	UnaryE  goto 20
	T  goto 21
	F  goto 22
	Unary_op  goto 23


state 92
	iteration_stmt : FOR OPEN ForAssignExpr SEMIC . cond SEMIC UnaryE CLOSE compound_stmt  (16)
	iteration_stmt : FOR OPEN ForAssignExpr SEMIC . cond SEMIC ForAssignExpr CLOSE compound_stmt  (17)

	ID  shift 32
	NUM  shift 5
	OPEN  shift 6
	PLUS_PLUS  shift 7
	MINUS_MINUS  shift 8
	.  error

	E  goto 60
	cond  goto 103
	UnaryE  goto 20
	expr  goto 62
	relexp  goto 63
	logexp  goto 64
	T  goto 21
	F  goto 22
	Unary_op  goto 23


state 93
	iteration_stmt : FOR OPEN MultipleAssignExpr SEMIC . MultipleForcond SEMIC MultipleAssignExpr CLOSE compound_stmt  (18)
	iteration_stmt : FOR OPEN MultipleAssignExpr SEMIC . MultipleForcond SEMIC MultipleUnaryExpr CLOSE compound_stmt  (19)

	ID  shift 32
	NUM  shift 5
	OPEN  shift 6
	PLUS_PLUS  shift 7
	MINUS_MINUS  shift 8
	.  error

	E  goto 60
	cond  goto 104
	UnaryE  goto 20
	MultipleForcond  goto 105
	expr  goto 62
	relexp  goto 63
	logexp  goto 64
	T  goto 21
	F  goto 22
	Unary_op  goto 23


state 94
	MultipleAssignExpr : MultipleAssignExpr COMMA . ForAssignExpr  (20)

	ID  shift 65
	.  error

	ForAssignExpr  goto 106


state 95
	echo_stmt : ECHO OPEN ConcatenatedText CLOSE . SEMIC  (28)

	SEMIC  shift 107
	.  error


state 96
	ConcatenatedText : ConcatenatedText DOT STRING .  (29)

	.  reduce 29


state 97
	Unary_op : ID u_op OPEN E CLOSE .  (60)

	.  reduce 60


state 98
	logexp : E logOp E .  (36)
	E : E . PLUS T  (47)
	E : E . MINUS T  (48)

	PLUS  shift 46
	MINUS  shift 47
	SEMIC  reduce 36
	COMMA  reduce 36
	CLOSE  reduce 36
	OR  reduce 36
	AND  reduce 36


state 99
	relexp : E relOp E .  (35)
	E : E . PLUS T  (47)
	E : E . MINUS T  (48)

	PLUS  shift 46
	MINUS  shift 47
	SEMIC  reduce 35
	COMMA  reduce 35
	CLOSE  reduce 35
	OR  reduce 35
	AND  reduce 35


state 100
	selection_stmt : IF OPEN cond CLOSE compound_stmt .  (11)
	selection_stmt : IF OPEN cond CLOSE compound_stmt . ELSE compound_stmt  (12)
	selection_stmt : IF OPEN cond CLOSE compound_stmt . ElseIfStatement ELSE compound_stmt  (13)

	ELSE  shift 108
	ELSEIF  shift 109
	END  reduce 11
	ID  reduce 11
	NUM  reduce 11
	OPEN  reduce 11
	PLUS_PLUS  reduce 11
	MINUS_MINUS  reduce 11
	OPEN_B  reduce 11
	CLOSE_B  reduce 11
	IF  reduce 11
	FOR  reduce 11
	ECHO  reduce 11

	ElseIfStatement  goto 110


state 101
	cond : expr logOp expr .  (32)

	.  reduce 32


state 102
	ForAssignExpr : ID EQ E .  (46)
	E : E . PLUS T  (47)
	E : E . MINUS T  (48)

	PLUS  shift 46
	MINUS  shift 47
	SEMIC  reduce 46
	COMMA  reduce 46
	CLOSE  reduce 46


state 103
	iteration_stmt : FOR OPEN ForAssignExpr SEMIC cond . SEMIC UnaryE CLOSE compound_stmt  (16)
	iteration_stmt : FOR OPEN ForAssignExpr SEMIC cond . SEMIC ForAssignExpr CLOSE compound_stmt  (17)

	SEMIC  shift 111
	.  error


state 104
	MultipleForcond : cond .  (23)

	.  reduce 23


state 105
	iteration_stmt : FOR OPEN MultipleAssignExpr SEMIC MultipleForcond . SEMIC MultipleAssignExpr CLOSE compound_stmt  (18)
	iteration_stmt : FOR OPEN MultipleAssignExpr SEMIC MultipleForcond . SEMIC MultipleUnaryExpr CLOSE compound_stmt  (19)
	MultipleForcond : MultipleForcond . COMMA cond  (22)

	SEMIC  shift 112
	COMMA  shift 113
	.  error


state 106
	MultipleAssignExpr : MultipleAssignExpr COMMA ForAssignExpr .  (20)

	.  reduce 20


state 107
	echo_stmt : ECHO OPEN ConcatenatedText CLOSE SEMIC .  (28)

	.  reduce 28


state 108
	selection_stmt : IF OPEN cond CLOSE compound_stmt ELSE . compound_stmt  (12)

	OPEN_B  shift 9
	.  error

	compound_stmt  goto 114


state 109
	ElseIfStatement : ELSEIF . OPEN cond CLOSE compound_stmt ElseIfStatement  (14)
	ElseIfStatement : ELSEIF . OPEN cond CLOSE compound_stmt  (15)

	OPEN  shift 115
	.  error


state 110
	selection_stmt : IF OPEN cond CLOSE compound_stmt ElseIfStatement . ELSE compound_stmt  (13)

	ELSE  shift 116
	.  error


state 111
	iteration_stmt : FOR OPEN ForAssignExpr SEMIC cond SEMIC . UnaryE CLOSE compound_stmt  (16)
	iteration_stmt : FOR OPEN ForAssignExpr SEMIC cond SEMIC . ForAssignExpr CLOSE compound_stmt  (17)

	ID  shift 117
	PLUS_PLUS  shift 7
	MINUS_MINUS  shift 8
	.  error

	ForAssignExpr  goto 118
	UnaryE  goto 119


state 112
	iteration_stmt : FOR OPEN MultipleAssignExpr SEMIC MultipleForcond SEMIC . MultipleAssignExpr CLOSE compound_stmt  (18)
	iteration_stmt : FOR OPEN MultipleAssignExpr SEMIC MultipleForcond SEMIC . MultipleUnaryExpr CLOSE compound_stmt  (19)

	ID  shift 117
	PLUS_PLUS  shift 7
	MINUS_MINUS  shift 8
	.  error

	ForAssignExpr  goto 120
	UnaryE  goto 121
	MultipleAssignExpr  goto 122
	MultipleUnaryExpr  goto 123


state 113
	MultipleForcond : MultipleForcond COMMA . cond  (22)

	ID  shift 32
	NUM  shift 5
	OPEN  shift 6
	PLUS_PLUS  shift 7
	MINUS_MINUS  shift 8
	.  error

	E  goto 60
	cond  goto 124
	UnaryE  goto 20
	expr  goto 62
	relexp  goto 63
	logexp  goto 64
	T  goto 21
	F  goto 22
	Unary_op  goto 23


state 114
	selection_stmt : IF OPEN cond CLOSE compound_stmt ELSE compound_stmt .  (12)

	.  reduce 12


state 115
	ElseIfStatement : ELSEIF OPEN . cond CLOSE compound_stmt ElseIfStatement  (14)
	ElseIfStatement : ELSEIF OPEN . cond CLOSE compound_stmt  (15)

	ID  shift 32
	NUM  shift 5
	OPEN  shift 6
	PLUS_PLUS  shift 7
	MINUS_MINUS  shift 8
	.  error

	E  goto 60
	cond  goto 125
	UnaryE  goto 20
	expr  goto 62
	relexp  goto 63
	logexp  goto 64
	T  goto 21
	F  goto 22
	Unary_op  goto 23


state 116
	selection_stmt : IF OPEN cond CLOSE compound_stmt ElseIfStatement ELSE . compound_stmt  (13)

	OPEN_B  shift 9
	.  error

	compound_stmt  goto 126


state 117
	ForAssignExpr : ID . EQ E  (46)
	UnaryE : ID . PLUS_PLUS  (66)
	UnaryE : ID . MINUS_MINUS  (68)

	EQ  shift 91
	PLUS_PLUS  shift 29
	MINUS_MINUS  shift 30
	.  error


state 118
	iteration_stmt : FOR OPEN ForAssignExpr SEMIC cond SEMIC ForAssignExpr . CLOSE compound_stmt  (17)

	CLOSE  shift 127
	.  error


state 119
	iteration_stmt : FOR OPEN ForAssignExpr SEMIC cond SEMIC UnaryE . CLOSE compound_stmt  (16)

	CLOSE  shift 128
	.  error


state 120
	MultipleAssignExpr : ForAssignExpr .  (21)

	.  reduce 21


state 121
	MultipleUnaryExpr : UnaryE .  (25)

	.  reduce 25


state 122
	iteration_stmt : FOR OPEN MultipleAssignExpr SEMIC MultipleForcond SEMIC MultipleAssignExpr . CLOSE compound_stmt  (18)
	MultipleAssignExpr : MultipleAssignExpr . COMMA ForAssignExpr  (20)

	COMMA  shift 94
	CLOSE  shift 129
	.  error


state 123
	iteration_stmt : FOR OPEN MultipleAssignExpr SEMIC MultipleForcond SEMIC MultipleUnaryExpr . CLOSE compound_stmt  (19)
	MultipleUnaryExpr : MultipleUnaryExpr . COMMA UnaryE  (24)

	COMMA  shift 130
	CLOSE  shift 131
	.  error


state 124
	MultipleForcond : MultipleForcond COMMA cond .  (22)

	.  reduce 22


state 125
	ElseIfStatement : ELSEIF OPEN cond . CLOSE compound_stmt ElseIfStatement  (14)
	ElseIfStatement : ELSEIF OPEN cond . CLOSE compound_stmt  (15)

	CLOSE  shift 132
	.  error


state 126
	selection_stmt : IF OPEN cond CLOSE compound_stmt ElseIfStatement ELSE compound_stmt .  (13)

	.  reduce 13


state 127
	iteration_stmt : FOR OPEN ForAssignExpr SEMIC cond SEMIC ForAssignExpr CLOSE . compound_stmt  (17)

	OPEN_B  shift 9
	.  error

	compound_stmt  goto 133


state 128
	iteration_stmt : FOR OPEN ForAssignExpr SEMIC cond SEMIC UnaryE CLOSE . compound_stmt  (16)

	OPEN_B  shift 9
	.  error

	compound_stmt  goto 134


state 129
	iteration_stmt : FOR OPEN MultipleAssignExpr SEMIC MultipleForcond SEMIC MultipleAssignExpr CLOSE . compound_stmt  (18)

	OPEN_B  shift 9
	.  error

	compound_stmt  goto 135


state 130
	MultipleUnaryExpr : MultipleUnaryExpr COMMA . UnaryE  (24)

	ID  shift 136
	PLUS_PLUS  shift 7
	MINUS_MINUS  shift 8
	.  error

	UnaryE  goto 137


state 131
	iteration_stmt : FOR OPEN MultipleAssignExpr SEMIC MultipleForcond SEMIC MultipleUnaryExpr CLOSE . compound_stmt  (19)

	OPEN_B  shift 9
	.  error

	compound_stmt  goto 138


state 132
	ElseIfStatement : ELSEIF OPEN cond CLOSE . compound_stmt ElseIfStatement  (14)
	ElseIfStatement : ELSEIF OPEN cond CLOSE . compound_stmt  (15)

	OPEN_B  shift 9
	.  error

	compound_stmt  goto 139


state 133
	iteration_stmt : FOR OPEN ForAssignExpr SEMIC cond SEMIC ForAssignExpr CLOSE compound_stmt .  (17)

	.  reduce 17


state 134
	iteration_stmt : FOR OPEN ForAssignExpr SEMIC cond SEMIC UnaryE CLOSE compound_stmt .  (16)

	.  reduce 16


state 135
	iteration_stmt : FOR OPEN MultipleAssignExpr SEMIC MultipleForcond SEMIC MultipleAssignExpr CLOSE compound_stmt .  (18)

	.  reduce 18


state 136
	UnaryE : ID . PLUS_PLUS  (66)
	UnaryE : ID . MINUS_MINUS  (68)

	PLUS_PLUS  shift 29
	MINUS_MINUS  shift 30
	.  error


state 137
	MultipleUnaryExpr : MultipleUnaryExpr COMMA UnaryE .  (24)

	.  reduce 24


state 138
	iteration_stmt : FOR OPEN MultipleAssignExpr SEMIC MultipleForcond SEMIC MultipleUnaryExpr CLOSE compound_stmt .  (19)

	.  reduce 19


state 139
	ElseIfStatement : ELSEIF OPEN cond CLOSE compound_stmt . ElseIfStatement  (14)
	ElseIfStatement : ELSEIF OPEN cond CLOSE compound_stmt .  (15)

	ELSEIF  shift 109
	ELSE  reduce 15

	ElseIfStatement  goto 140


state 140
	ElseIfStatement : ELSEIF OPEN cond CLOSE compound_stmt ElseIfStatement .  (14)

	.  reduce 14


State 66 contains 1 shift/reduce conflict.


48 terminals, 27 nonterminals
69 grammar rules, 141 states
